@page "/form-corso"
@page "/form-corso/{id:int}"
@using Fitstic_Hackathon_4.Data
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext db
@inject NavigationManager NavigationManager
@inject IJSRuntime ijsRuntime


<!--
<link href="//maxcdn.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/css/datepicker.css" rel="stylesheet" type="text/css" />
-->


<div class="container">
    <div id="accordion">
        <div class="row">
            <div class="col-lg-12">
                <div class="text-center">
                    @if (Id == 0)
                    {
                        <div class="h3 font-weight-bold">Inserimento <br /> NUOVO CORSO</div>
                    }
                    else
                    {
                        <h3 class="h3 font-weight-bold">Modifica CORSO </h3>
                    }

                </div>
            </div>
        </div>

        <br />
        <EditForm Model="corso" OnValidSubmit="()=> SalvaCorso()">
            <DataAnnotationsValidator />

            <div class="card card-default">
                <div class="card-header">
                    <h4 class="card-title btn-link">
                        <a class="pointer-link" data-toggle="collapse" data-parent="#accordion">
                            <i class="glyphicon glyphicon-search text-gold"></i>
                            <b>GENERALE</b>
                        </a>
                    </h4>
                </div>
                <div id="collapseDatiCorso" class="collapse show">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-3 col-lg-4">
                                <div class="form-group">
                                    <label class="control-label">NOME</label>
                                    <!--Campo x modifica dato o disponibile per nuovo inserimento-->
                                    <input type="text" class="form-control font-weight-bold" id="inputNomePart" @bind-value="corso.Nome" />
                                </div>
                            </div>
                            <div class="col-md-1 col-lg-4">
                                <div class="form-group">
                                    <label class="control-label">EDIZIONE</label>
                                    <input type="text" class="form-control" id="inputCognomePers" @bind-value="corso.AnnoAccademico" />
                                </div>
                            </div>


                            <br />
                            <div class="col-md-2 col-lg-3">
                                <div class="form-group">
                                    <label class="control-label">DATA INIZIO</label>
                                    <input type="date" class="form-control" id="inpDatInizoCorso" @bind-value="corso.DataInizio" />
                                </div>
                            </div>
                            <div class="col-md-2 col-lg-3">
                                <div class="form-group">
                                    <label class="control-label">DATA FINE</label>
                                    <input type="date" class="form-control" id="ipnDataFineCorso" @bind-value="corso.DataFine" />
                                </div>
                            </div>

                            <div class="col-md-3 col-lg-4">
                                <div class="form-group">
                                    <label class="control-label">ORGANIZZATORE</label>
                                    <select class="form-control" @bind="corso.OrganizzatoreId">
                                        @foreach (var o in organizzatori)
                                        {
                                            <option value="@o.Id"> @o.Nome @o.Cognome</option>
                                        }

                                    </select>
                                </div>
                            </div>
                            <div class="col-md-2 col-lg-3">
                                <div class="form-group">
                                    <label class="control-label">SEDE</label>
                                    <input type="text" class="form-control" id="inputTelPart" @bind-value="corso.Sede" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-lg-12">
                    <div class="pull-right">
                        <button type="submit" class="btn btn-success btn-lg" id="btnSubmit"><i class="fa fa-save"></i> Salva</button>
                        <button type="button" class="btn btn-danger btn-lg" id="btnDel"><i class="fa fa-save"></i> Elimina</button>
                        <a class="btn btn-warning btn-lg" href="corsi" id="btnToTop"><i class="fa fa-arrow-left" href="operatori"></i> Indietro</a>
                    </div>
                </div>
            </div>
            <br />

        </EditForm>

        <!--CARD MODULI-->
        <!--CARD MODULI-->
        @if (Id != 0)
        {
        <div class="card card-default">
            <div class="card-header">
                <h4 class="card-title btn-link">
                    <a class="pointer-link "data-toggle="collapse" data-parent="#accordion" @onclick="e => this.CollapsedA = !this.CollapsedA ">
                        @( this.CollapsedA ? "" : "" )
                        <i class="glyphicon glyphicon-search text-gold"></i>
                        <b>MODULI</b>
                    </a>
                </h4>
            </div>

            <div id="collapseModuliCorso" class="@(CollapsedA ? "collapse" : "" )">
                <div class="card-body">
                    <EditForm Model="mod" OnSubmit="() => AggiungiModuloCorso()"> 
                        <div class="form-group">
                            <label> Inserisci moduli</label> <br />
                            <select class="form-control" name="selMod" @bind="mod.Id">
                                @foreach (var mod in altri_moduli)
                                {
                                    <option value="@mod.Id"> @mod.Nome </option>

                                }
                            </select>
                            <button type="submit" class="button btn btn-primary" href="form-personale"> AGGIUNGI </button>
                        </div>                      
                    </EditForm>
                    <br />
                    <div class="table-responsive" id="proTeamScroll" tabindex="2" style="height: 400px; overflow: hidden; outline: none;">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    <th>Nome </th>
                                    <th>Materia</th>
                                    <th>Docente</th>
                                    <th>Tutor</th>
                                    <th>In corso</th>
                                    <th>Edit</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var modC in moduli_corso)
                                {
                                    <tr>
                                        <td id="idPart">
                                            @modC.Id
                                        </td>
                                        <td>
                                            <b>@modC.Nome  </b>
                                        </td>
                                        <td>
                                            @modC.Materia
                                        </td>
                                        <td>

                                            @modC.Docente.Nome @modC.Docente.Cognome
                                        </td>
                                        <td class="text-truncate">

                                            @modC.Tutor.Nome @modC.Tutor.Cognome
                                        </td>
                                        <td>
                                            <!--CONTROLLO SE INTERVALLO DATE È COMPRESA LA DATA ODIERNA
                                            quindi stampa SÌ verde, oppure NO rosso -->

                                            @if (modC.DataInizio < DateTime.Now && modC.DataFine > DateTime.Now)
                                            {
                                                <font color="green"> <b> SÌ </b></font>
                                            }
                                            else
                                            {
                                                <font color="red"> <b> NO </b></font>
                                            }
                                        </td>
                                        <td>
                                            <a data-toggle="tooltip" title="Report" data-original-title="Vedi andamento" href="report-modulo/@corso.Id/@modC.Id"><i class="fas fa-signal"></i></a>
                                            <a data-toggle="tooltip" title="Assegna voti" data-original-title="Assegna voti" href="form-esame/@modC.Id/@corso.Id"><i class="fas fa-list-alt"></i></a>
                                            <a data-toggle="tooltip" title="Modifica" data-original-title="Modifica" href="form-modulo/@modC.Id"><i class="fas fa-pencil-alt"></i></a>
                                            <a data-toggle="tooltip" title="Modulo non più assegnato" data-original-title="Modulo non più assegnato" @onclick="() => EliminaModuloCorso(modC)"><i class="far fa-trash-alt"></i></a>
                                        </td>
                                    </tr>

                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
       
        <!--CARD ISCRITTI-->
        <!--CARD ISCRITTI-->


        <div class="card card-default">
            <div class="card-header">
                <h4 class="card-title btn-link">
                    <a class="pointer-link" data-toggle="collapse" data-parent="#accordion" @onclick="e => this.CollapsedB = !this.CollapsedB ">
                        @( this.CollapsedB ? "" : "" )
                        <i class="glyphicon glyphicon-search text-gold"></i>
                        <b>ISCRITTI</b>
                    </a>
                </h4>
            </div>
            <div id="collapseModuliCorso" class="@(CollapsedB? "collapse": "" )">
                <div class="card-body">
                    <div class="table-responsive" id="proTeamScroll" tabindex="2" style="height: 400px; overflow: hidden; outline: none;">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Id Iscr.</th>
                                    <th>Nome Cognome </th>
                                    <th>Data Iscrizione</th>
                                    <th>Telefono</th>
                                    <th>Edit</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var isc in iscritti_corso)
                                {
                                    <tr>
                                        <td id="idPart">
                                            @isc.Id
                                        </td>
                                        <td>
                                            <b>@isc.Partecipante.Nome @isc.Partecipante.Cognome </b>
                                        </td>
                                        <td>
                                            @isc.DataIscrizione
                                        </td>
                                        <td>
                                            @isc.Partecipante.Telefono
                                        </td>
                                        <td>
                                            <a data-toggle="tooltip" title="" data-original-title="Edit" href="form-partecipante/@isc.PartecipanteId"><i class="fas fa-pencil-alt"></i></a>
                                            <a data-toggle="tooltip" title="" data-original-title="Delete" @onclick="() => EliminaIscrizioneCorso(isc)"><i class="far fa-trash-alt"></i></a>
                                        </td>
                                    </tr>

                                }

                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        
        }

    </div>
</div>

        

<!--COMMAND BUTTONS-->

<br />
<br />
<br />

@code {

    [Parameter]
    public bool CollapsedA { get; set; } = true;
    public bool CollapsedB { get; set; } = true;

    [Parameter]
    public int Id { get; set; }

    private Organizzatore[] organizzatori { get; set; }
    private Iscrizione[] iscritti_corso;
    private Modulo[] moduli_corso;
    private Modulo[] altri_moduli;
    private Corso[] altri_corsi;

    private Modulo mod_test = new Modulo();
    private Modulo mod = new Modulo();
    private Corso corso = new Corso();


    protected override async Task OnInitializedAsync()
    {

        //creazione vettore Organizzatori x visualizzazione in InputSelect
        this.organizzatori = await db.TabOrganizzatori
            .ToArrayAsync();

        this.iscritti_corso = await db.TabIscrizioni
            .Include(x => x.Partecipante)
            .Include(x => x.Corso)
            .Where(x => x.CorsoId == Id)
            .ToArrayAsync();

        this.moduli_corso = await db.TabModuli
            .Include(x => x.Corso)
            .Include(x => x.Docente)
            .Include(x => x.Tutor)
            .Where(x => x.CorsoId == Id)
            .ToArrayAsync();

        this.altri_moduli = await db.TabModuli
              .Where(x => x.CorsoId == null)
              .ToArrayAsync();

        this.altri_corsi = await db.TabCorsi
            .ToArrayAsync();



        if (Id == 0)
        {
            //istanza nuovo corso
            corso = new Corso();
        }
        else
        {
            //trova tabella del record e stampa dati nel form
            corso = await db.TabCorsi.FindAsync(Id);
        }


    }

    public async Task SalvaCorso()
    {
        if (Id == 0)
        {
            //inserimento nuovo record
            db.TabCorsi.Add(corso);
            await db.SaveChangesAsync();

        }
        else
        {
            //aggiornamento dati di un record esistente
            await db.SaveChangesAsync();
        }

        NavigationManager.NavigateTo("/corsi");

    }

    public async void AggiungiModuloCorso()
    {
        mod_test = await db.TabModuli
            .Where(x => x.Id == mod.Id)
            .SingleAsync();

        mod_test.CorsoId = Id;
        await db.SaveChangesAsync();
        await OnInitializedAsync();
        StateHasChanged();

    }


    public async void EliminaModuloCorso(Modulo mod_sel)
    {
        mod_sel.CorsoId = null;
        await db.SaveChangesAsync();
        await OnInitializedAsync();
        StateHasChanged();

    }

    public async void EliminaIscrizioneCorso(Iscrizione iscr_sel)
    {
        db.TabIscrizioni.Remove(iscr_sel);
        await db.SaveChangesAsync();
        await OnInitializedAsync();
        StateHasChanged();
    }

   
}