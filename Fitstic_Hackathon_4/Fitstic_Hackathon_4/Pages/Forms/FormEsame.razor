@page "/form-esame/{idMod:int}/{idCorso:int}"
@using Fitstic_Hackathon_4.Data
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext db
@inject NavigationManager NavigationManager
@inject IJSRuntime ijsRuntime

<center>
    <div class="h2 font-weight-bold">Inserimento voti modulo</div>

    @foreach (var mod in all_modules)
    {
        if (mod.Id == idMod)
        {
            <div class="h2 font-weight-bold">@mod.Nome</div>
        }
    }
</center>
<br />
@if (partecipanti_totali.Length == 0)
{
    <div class="h2 text-danger"> NESSUN PARTECIPANTE ISCRITTO <br /> </div>
    <a class="btn button btn-warning btn-lg" href="corsi"><i class="fas fa-clone f-left" href="corsi"></i> Corsi </a>


}
else
{

}

@if (partecipanti_senza_voto.Count == 0)
{
    <div class="h2 text-danger">NESSUN VOTO DA INSERIRE <br /> Verifica il report riassuntivo!</div>
    <a class="btn button btn-warning btn-lg" href="report-modulo/@idCorso/@idMod"><i class="fas fa-signal" href="report-modulo/@idCorso/@idMod"></i> REPORT </a>

}
else
{

    <EditForm Model="exam">
        <div class="container">
            <div class="row">
                <div class="col-12 col-sm-12 col-md-12">
                    <div class="card">
                        <div class="card-header">
                        </div>
                        <div class="card-body">
                            <br />
                            <label>Data esame:</label>
                            <input type="date" class="form-control" @bind="data_esame" />
                            <br />
                            <div class="table-responsive" id="proTeamScroll" tabindex="2" style="height: 400px; overflow: hidden; outline: none;">
                                <table class="table table-striped">
                                    <thead>
                                        <tr>
                                            <th>#</th>
                                            <th><b> Nome Cognome </b></th>
                                            <th>Data Nascita</th>
                                            <th>Voto</th>
                                            <th>Azioni</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var isc in partecipanti_senza_voto)
                                        {

                                            <tr>

                                                <td id="idPart">
                                                    @isc.Id
                                                </td>
                                                <td id="nominativoPartEsame">
                                                    @isc.Nome  @isc.Cognome
                                                </td>
                                                <td id="birthdatePartEsame">
                                                    @isc.DataNascita.ToShortDateString()
                                                </td>
                                                <td id="@isc.Id">

                                                    <InputNumber id="@isc.Id" @bind-Value="exam.Punteggio"></InputNumber>

                                                </td>
                                                <td id="actions">
                                                    <button id="assegnaVoto" class="btn-link" @onclick="() => AssegnaVotiModulo(isc.Id)"> Assegna </button>
                                                </td>

                                            </tr>

                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
}
<br />

<!-- <button type="submit" class="btn btn-warning btn-lg " id="btnSubmitVotes"><i class="fa fa-saved" > </i> ASSEGNA </button> -->

<br />



@code {

    [Parameter]
    public int idCorso { get; set; }
    [Parameter]
    public int idMod { get; set; }
    public DateTime data_esame { get; set; } = new DateTime();
    public bool test;

    public Partecipante[] partecipanti_totali { get; set; }
    public Partecipante[] partecipanti_con_voto { get; set; }
    public List<Partecipante> partecipanti_senza_voto { get; set; } = new List<Partecipante>();
    public Modulo[] all_modules { get; set; }
    public Esame exam { get; set; } = new Esame();


    protected override async Task OnInitializedAsync()
    {
        this.all_modules = await db.TabModuli
            .ToArrayAsync();

        this.partecipanti_totali = await db.TabIscrizioni
            .Include(x => x.Partecipante)
            .Include(x => x.Corso)
            .Where(x=> x.CorsoId== idCorso)
            .Select(x=> x.Partecipante)
            .ToArrayAsync();

        this.partecipanti_con_voto = await db.TabEsami
            .Include(x => x.Modulo)
            .Include(x => x.Partecipante)
            .Select(x => x.Partecipante)
            .ToArrayAsync();

        foreach (var part in partecipanti_totali)
        {
            test = false;

            foreach (var iscritto in partecipanti_con_voto)
            {
                if (iscritto.Id == part.Id)
                {
                    if (test == true)
                    {

                    }
                    else
                    {
                        test = true;
                    }

                }

            }

            if (test == false)
            {

                partecipanti_senza_voto.Add(part);

            }
        }

    }

    public async void AssegnaVotiModulo(int partId)
    {
        exam.Data = data_esame;
        exam.ModuloId = idMod;
        exam.PartecipanteId = partId;
        db.TabEsami.Add(exam);
        await db.SaveChangesAsync();
        await OnInitializedAsync();
        StateHasChanged();

    }


}

