@page "/form-iscrizione"
@using Fitstic_Hackathon_4.Data
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext db
@inject NavigationManager NavigationManager
@inject IJSRuntime ijsRuntime

<link href="//maxcdn.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/css/datepicker.css" rel="stylesheet" type="text/css" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css">

@if (partecipanti.Length == 0)
{
    <div class="h2 text-danger">NESSUN PARTECIPANTE DISPONIBILE PER L'ISCRIZONE </div>
    <br />
    <a class="btn btn-warning btn-lg" href="partecipanti" id="btnToTop"><i class="fa fa-arrow-left" href="partecipanti"></i> Indietro</a>
}
else
{

    <EditForm Model="isc" OnValidSubmit="() => SalvaIscrizione()">
        <DataAnnotationsValidator />
        <div class="container">
            <div id="accordion">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="text-center">
                            <h2>ISCRIZIONI</h2>
                        </div>
                    </div>
                </div>

                <br />

                <div class="card card-default">
                    <div class="card-header">
                        <h4 class="card-title">
                            <a data-toggle="collapse" data-parent="#accordion">
                                <i class="glyphicon glyphicon-search text-gold"></i>
                                <b></b>
                            </a>
                        </h4>
                    </div>
                    <div id="collapse1" class="collapse show">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-3 col-lg-4">
                                    <div class="form-group">
                                        <label class="control-label" for="selStud">STUDENTE</label>
                                        <select id="selStud" title="Scegli un partecipante"
                                                class="form-control" @bind="isc.PartecipanteId">
                                            @foreach (var part in partecipanti_non_iscritti)
                                            {
                                                <option value="@part.Id"> @part.Nome @part.Cognome </option>
                                            }
                                        </select>
                                        <label for="selectCorso" class="control-label">CORSO</label>
                                        <select id="selectCorso" title="Scegli un corso"
                                                class="form-control" @bind="isc.CorsoId">
                                            @foreach (var c in corsi)
                                            {
                                                <option value="@c.Id">@c.Nome</option>

                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>






        <!--COMMAND BUTTONS-->

        <div class="row">
            <div class="col-lg-12">
                <div class="pull-right">
                    <button type="submit" class="btn btn-success btn-lg" id="btnSubmit"><i class="fa fa-save"></i> Salva</button>

                    <a class="btn btn-warning btn-lg" href="partecipanti" id="btnToTop"><i class="fa fa-arrow-left" href="operatori"></i> Indietro</a>
                </div>
            </div>
        </div>

    </EditForm>

    <br />
    <br />
    <br />
}


@code {

    public Iscrizione isc = new Iscrizione();
    //private Partecipante part_test = new Partecipante();
    public Partecipante[] partecipanti;
    public Partecipante[] partecipanti_iscritti;
    public List<Partecipante> partecipanti_non_iscritti = new List<Partecipante>();
    public Corso[] corsi;
    public bool test;


    protected override async Task OnInitializedAsync()
    {

        partecipanti = await db.TabPartecipanti
            .OrderBy(x => x.Cognome)
            .ToArrayAsync();

        partecipanti_iscritti = await db.TabIscrizioni
            .Include(x => x.Partecipante)
            .Select(x => x.Partecipante)
            .ToArrayAsync();


        corsi = await db.TabCorsi
         .AsNoTracking()
         .OrderBy(x => x.DataInizio)
         .ToArrayAsync();


        foreach (var part in partecipanti)
        {
            test = false;

            foreach (var iscritto in partecipanti_iscritti)
            {
                if (iscritto.Id == part.Id)
                {
                    if (test == true)
                    {      
                        
                    }
                    else
                    { 
                        test = true; 
                    }                
                
                }

            }

            if (test == false)
            {

                partecipanti_non_iscritti.Add(part);

            }
        }

    }

    private void OnChangePartecipanteId(ChangeEventArgs x)
    {
        isc.PartecipanteId = Int32.Parse(x.Value.ToString());
    }


    public async void SalvaIscrizione()
    {
        //inserimento nuovo record
        isc.DataIscrizione = DateTime.Now;
        db.TabIscrizioni.Add(isc);
        await db.SaveChangesAsync();

        NavigationManager.NavigateTo("/partecipanti");

    }
}
